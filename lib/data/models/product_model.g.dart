// GENERATED CODE - DO NOT MODIFY BY HAND

part of 'product_model.dart';

// **************************************************************************
// JsonSerializableGenerator
// **************************************************************************

ProductModel _$ProductModelFromJson(Map<String, dynamic> json) => ProductModel(
  id: json['id'] as String,
  code: json['code'] as String,
  name: json['name'] as String,
  brandId: json['brand_id'] as String,
  categoryId: json['category_id'] as String,
  subcategoryId: json['subcategory_id'] as String,
  imageUrl: json['image_url'] as String?,
  description: json['description'] as String?,
  size: (json['size'] as num?)?.toDouble(),
  sizeMeasure: json['size_measure'] as String?,
  package: json['package'] as String?,
  variableWeight: json['variable_weight'] as bool?,
  label: json['label'] as String?,
  isOffer: json['is_offer'] as bool?,
  active: json['active'] as bool? ?? true,
  createdAt: DateTime.parse(json['created_at'] as String),
  updatedAt: DateTime.parse(json['updated_at'] as String),
  deletedAt: json['deleted_at'] == null
      ? null
      : DateTime.parse(json['deleted_at'] as String),
  unitsPerBundle: (json['units_per_bundle'] as num?)?.toInt(),
  alternativeName: json['alternative_name'] as String?,
  bundlePackage: json['bundle_package'] as String?,
  unitCost: (json['unit_cost'] as num?)?.toDouble(),
  billingUnit: json['billing_unit'] as String?,
  orderUnit: json['order_unit'] as String?,
  minQuantity: (json['min_quantity'] as num?)?.toDouble(),
  suggestedIncrement: (json['suggested_increment'] as num?)?.toDouble(),
  isFractionable: json['is_fractionable'] as bool?,
  weightInGrams: (json['weight_in_grams'] as num?)?.toInt(),
  sku: json['sku'] as String?,
  upc: json['upc'] as String?,
  directLoad: json['direct_load'] as bool?,
  observations: json['observations'] as String?,
  supplierCode: json['supplier_code'] as String?,
  purchaseUnit: json['purchase_unit'] as String?,
  orderName: json['order_name'] as String?,
  orderUnitConversion: (json['order_unit_conversion'] as num?)?.toDouble(),
  supplierId: json['supplier_id'] as String?,
  tax: (json['tax'] as num?)?.toDouble(),
  billingUnitConversion: (json['billing_unit_conversion'] as num?)?.toDouble(),
  sectorId: json['sector_id'] as String?,
);

Map<String, dynamic> _$ProductModelToJson(ProductModel instance) =>
    <String, dynamic>{
      'id': instance.id,
      'code': instance.code,
      'name': instance.name,
      'brand_id': instance.brandId,
      'category_id': instance.categoryId,
      'subcategory_id': instance.subcategoryId,
      'image_url': instance.imageUrl,
      'description': instance.description,
      'size': instance.size,
      'size_measure': instance.sizeMeasure,
      'package': instance.package,
      'variable_weight': instance.variableWeight,
      'label': instance.label,
      'is_offer': instance.isOffer,
      'active': instance.active,
      'created_at': instance.createdAt.toIso8601String(),
      'updated_at': instance.updatedAt.toIso8601String(),
      'deleted_at': instance.deletedAt?.toIso8601String(),
      'units_per_bundle': instance.unitsPerBundle,
      'alternative_name': instance.alternativeName,
      'bundle_package': instance.bundlePackage,
      'unit_cost': instance.unitCost,
      'billing_unit': instance.billingUnit,
      'order_unit': instance.orderUnit,
      'min_quantity': instance.minQuantity,
      'suggested_increment': instance.suggestedIncrement,
      'is_fractionable': instance.isFractionable,
      'weight_in_grams': instance.weightInGrams,
      'sku': instance.sku,
      'upc': instance.upc,
      'direct_load': instance.directLoad,
      'observations': instance.observations,
      'supplier_code': instance.supplierCode,
      'purchase_unit': instance.purchaseUnit,
      'order_name': instance.orderName,
      'order_unit_conversion': instance.orderUnitConversion,
      'supplier_id': instance.supplierId,
      'tax': instance.tax,
      'billing_unit_conversion': instance.billingUnitConversion,
      'sector_id': instance.sectorId,
    };
